---
import AppLayout from '@/components/AppLayout.tsx'

import '@/styles/globals.css'
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="A comprehensive computer science reference implemented in C++ and WebAssembly."
    />
    <title>Mazhar Lab</title>

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content="MLab" />
    <meta
      property="og:description"
      content="A comprehensive computer science reference implemented in C++ and WebAssembly."
    />
    <meta
      property="og:image"
      content="https://mazharmorshed.github.io/mlab/mlab-social-image.png"
    />
    <meta property="og:url" content="https://mazharmorshed.github.io/mlab" />
    <meta property="og:type" content="website" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="MLab" />
    <meta
      name="twitter:description"
      content="A comprehensive computer science reference implemented in C++ and WebAssembly."
    />
    <meta
      name="twitter:image"
      content="https://mazharmorshed.github.io/mlab/mlab-social-image.png"
    />

    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme')
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
      }
      const isDark = getThemePreference() === 'dark'
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark')
          localStorage.setItem('theme', isDark ? 'dark' : 'light')
        })
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] })
      }
    </script>
  </head>
  <body>
    <AppLayout client:visible>
      <div class="w-full max-w-[100vw] overflow-hidden p-8">
        <slot />
      </div>
    </AppLayout>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
